const messages = {
  app: {
    title: 'Page Augmentor',
    subtitle: 'Create custom UI for this page and review saved elements everywhere.',
    language: {
      label: 'Language',
    },
  },
  navigation: {
    home: 'Home',
    overview: 'Element overview',
    settings: 'Settings',
  },
  context: {
    loading: 'Loading active page...',
    noActiveTab: 'No active tab found.',
    resolveError: 'Unable to resolve active tab: {error}',
    pageUrlUnavailable: 'The page URL is not available yet.',
    tabUnavailable: 'Unable to identify the active tab.',
    focusRequiresActivation: 'Activate the tab before focusing an element.',
  },
  manage: {
    loadError: 'Unable to load elements: {error}',
    picker: {
      selectedWithPreview: 'Selected {preview}.',
      selected: 'Target selected.',
      cancelled: 'Selection cancelled.',
      instructions: 'Click an element on the page to select it.',
      startError: 'Unable to start picker: {error}',
    },
    delete: {
      confirm: 'Delete this element?',
      success: 'Element deleted.',
      error: 'Unable to delete the element: {error}',
    },
    export: {
      success: 'Downloaded {filename}.',
      error: 'Unable to export data: {error}',
    },
    import: {
      success: 'Imported {elements} elements across {pages} pages.',
      error: 'Unable to import data: {error}',
    },
    focusError: 'Unable to focus the element: {error}',
    openBubble: {
      success: 'Opened the bubble editor on the page.',
      error: 'Unable to open the bubble: {error}',
    },
    sections: {
      add: {
        title: 'Add element',
        description: 'Choose an element type and place it anywhere on the page.',
        typeLabel: 'Element type',
      },
      filters: {
        searchLabel: 'Search',
        searchPlaceholder: 'Filter by text, selector, or URL',
        filterLabel: 'Filter',
        options: {
          all: 'All',
          button: 'Button',
          link: 'Link',
          tooltip: 'Tooltip',
          area: 'Area',
        },
      },
    },
    actions: {
      addElement: 'Add element',
      cancel: 'Cancel',
      export: 'Export data',
      exporting: 'Exporting...',
      import: 'Import data',
      importing: 'Importing...',
    },
    creation: {
      started: 'Element ready to place on the page.',
      error: 'Unable to prepare the element: {error}',
    },
    empty: 'No elements match the current filters.',
    item: {
      noText: '(No text)',
      actionSelector: 'Forward clicks to: {selector}',
      actionFlow: 'Flow configured ({steps} steps)',
      frameContext: 'Frame: {frame}',
      frameFallback: 'Unnamed frame',
      tooltipDetails: 'Placement: {position} / {mode}',
      focus: 'Focus',
      openBubble: 'Open bubble',
      delete: 'Delete',
    },
  },
  type: {
    button: 'Button',
    link: 'Link',
    tooltip: 'Tooltip',
    area: 'Area',
  },
  tooltip: {
    position: {
      top: 'Top',
      right: 'Right',
      bottom: 'Bottom',
      left: 'Left',
    },
    mode: {
      persistent: 'Always visible',
      hover: 'Show on hover/focus',
    },
  },
  picker: {
    previewTarget: 'Target element',
  },
  overview: {
    heading: 'All saved elements',
    pageCount: {
      label: 'Pages',
    },
    elementCount: {
      label: 'Elements',
    },
    refresh: 'Refresh',
    refreshing: 'Refreshing...',
    empty: 'No elements have been saved yet.',
    pageSummary: '{count} elements',
    openPage: 'Open page',
    clearPage: 'Clear page',
    clearConfirm: 'Remove all elements saved for this page?',
    clearSuccess: 'Cleared every element for the page.',
    clearError: 'Unable to clear the page: {error}',
    deleteConfirm: 'Delete this element?',
    deleteSuccess: 'Element deleted.',
    deleteError: 'Unable to delete the element: {error}',
    focusError: 'Unable to focus the element: {error}',
    openBubbleError: 'Unable to open the bubble: {error}',
    openedNewTab: 'Opened a new tab. Open the side panel manually, then try again.',
    statusLoadError: 'Unable to load data: {error}',
  },
  settings: {
    heading: 'Settings',
    description: 'Manage preferences and organize your saved elements.',
    sections: {
      data: {
        title: 'Data management',
        description: 'Import or export saved elements as a JSON file.',
      },
      preferences: {
        title: 'Preferences',
        description: 'Choose your preferred language for the side panel.',
      },
    },
  },
  editor: {
    title: 'Configure element',
    titleCreate: 'Add element',
    titleEdit: 'Edit element',
    selectorLabel: 'Target selector',
    previewLabel: 'Live preview',
    typeLabel: 'Element type',
    textLabel: 'Text',
    textPlaceholder: 'Element text',
    tooltipTextPlaceholder: 'Tooltip text',
    areaTextPlaceholder: 'Optional notes for this area',
    hrefLabel: 'Link URL',
    hrefOptionalLabel: 'Optional URL',
    hrefTooltipLabel: 'Link URL',
    hrefPlaceholder: 'https://example.com',
    hrefOptionalPlaceholder: 'https://example.com (optional)',
    hrefTooltipPlaceholder: 'This element does not use a URL',
    actionLabel: 'Click action (optional)',
    actionPlaceholder: 'e.g. #submit-button',
    actionPick: 'Capture from page',
    actionCancel: 'Cancel selection',
    actionHintDefault: 'Pick an existing button to copy its click behavior.',
    actionHintSelected: 'Clicks will forward to "{selector}"',
    actionHintPicking: 'Click the button to copy (Esc to cancel).',
    actionFlowLabel: 'Action flow (optional)',
    actionFlowPlaceholder: '[\n  {"type":"click","selector":"#target"}\n]',
    actionFlowHintDefault:
      'Optional JSON array describing sequential steps (max {limit} chars). Supports click, wait, input, if, while, navigate.',
    actionFlowHintConfigured: 'Flow configured with {count} step(s).',
    actionFlowHintError: 'Flow error: {error}',
    actionFlowConfigure: 'Configure flow',
    actionFlowSummaryUnavailable: 'Action flow is only available for buttons.',
    actionFlowSummaryError: 'Flow error: {error}',
    actionFlowSummaryConfigured: 'Action flow configured ({count} steps)',
    actionFlowSummaryEmpty: 'No action flow configured yet.',
    actionFlowTitle: 'Configure action flow',
    actionFlowDescription: 'Build the sequence of actions that should run when visitors click this button.',
    tooltipPositionLabel: 'Tooltip placement',
    tooltipPersistenceLabel: 'Display',
    tooltipPersistenceCheckbox: 'Keep tooltip visible',
    tooltipPersistenceHint: 'When disabled, the tooltip appears on hover or focus.',
    positionLabel: 'Insertion position',
    actionBuilder: {
      add: 'Add action',
      empty: 'No actions yet. Use "Add action" to build a sequence.',
      advancedNotice: 'This flow uses advanced features. Edit the JSON directly below.',
      typeLabel: 'Action type',
      selectorLabel: 'Target selector',
      selectorPlaceholder: 'CSS selector for the target element',
      valueLabel: 'Text to enter',
      valuePlaceholder: 'Content to type',
      delayLabel: 'Wait duration (ms)',
      pick: 'Pick element',
      remove: 'Remove',
      type: {
        click: 'Click element',
        input: 'Fill input',
        wait: 'Wait',
      },
      error: {
        selector: 'Step #{index} requires a selector.',
        value: 'Step #{index} requires input text.',
        delay: 'Step #{index} requires a non-negative wait time.',
      },
    },
    sections: {
      basics: {
        title: 'Basics',
        description: 'Choose the element type and the text visitors will see.',
      },
      behavior: {
        title: 'Behavior and actions',
        description: 'Control destination links, click forwarding, and optional flows.',
      },
      tooltip: {
        title: 'Tooltip options',
        description: 'Decide how the tooltip should appear for visitors.',
      },
      placement: {
        title: 'Placement',
        description: 'Select where to insert the element relative to the target.',
      },
      appearance: {
        title: 'Appearance',
        description: 'Fine-tune colors, spacing, and other visual styles.',
      },
    },
    stylesLegend: 'Style settings',
    stylesHint: 'Pick a preset or adjust individual fields. Leave blank to keep the defaults.',
    stylesAdvancedToggle: 'Advanced CSS options',
    stylesAdvancedHint: 'Fine-tune positioning, shadows, and other layout details.',
    styles: {
      color: 'Text color',
      backgroundColor: 'Background color',
      position: 'CSS position',
      top: 'Top offset',
      right: 'Right offset',
      bottom: 'Bottom offset',
      left: 'Left offset',
      zIndex: 'Z-index',
      width: 'Width',
      height: 'Height',
      boxShadow: 'Shadow',
      fontSize: 'Font size',
      fontWeight: 'Font weight',
      padding: 'Padding',
      border: 'Border',
      borderRadius: 'Border radius',
      presetsLabel: 'Preset styles',
      presets: {
        custom: 'Custom',
        primary: 'Primary button',
        outline: 'Outline button',
        floating: 'Floating card',
        link: 'Link',
        area: 'Area panel',
      },
    },
    cancel: 'Cancel',
    save: 'Save',
    saveCreate: 'Create',
    saveUpdate: 'Save changes',
    errorTextRequired: 'Enter text for the element.',
    errorUrlRequired: 'Links require a URL.',
    errorActionRequiredForUrl: 'Buttons with a URL need an action flow.',
    errorFlowInvalid: 'Invalid action flow: {error}',
    previewButton: 'Button preview',
    previewLink: 'Link preview',
    previewTooltip: 'Tooltip preview',
    previewArea: 'Area preview',
  },
  position: {
    append: 'Append to end',
    prepend: 'Insert at start',
    before: 'Insert before',
    after: 'Insert after',
  },
};

export default messages;
